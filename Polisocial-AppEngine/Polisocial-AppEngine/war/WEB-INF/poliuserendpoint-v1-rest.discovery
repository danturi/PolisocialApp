{
 "kind": "discovery#restDescription",
 "etag": "\"koCc_mmAOJe4d9CoedmJUnZeEcg/7Of9qly2dbIuFinDx3GkMfAW6T0\"",
 "discoveryVersion": "v1",
 "id": "poliuserendpoint:v1",
 "name": "poliuserendpoint",
 "version": "v1",
 "description": "This is an API",
 "ownerDomain": "polimi.it",
 "ownerName": "polimi.it",
 "packagePath": "dima.polisocial.entity",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rest",
 "baseUrl": "https://polimisocial.appspot.com/_ah/api/poliuserendpoint/v1/",
 "basePath": "/_ah/api/poliuserendpoint/v1/",
 "rootUrl": "https://polimisocial.appspot.com/_ah/api/",
 "servicePath": "poliuserendpoint/v1/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "auth": {
  "oauth2": {
   "scopes": {
    "https://www.googleapis.com/auth/userinfo.email": {
     "description": "View your email address"
    }
   }
  }
 },
 "schemas": {
  "CollectionResponse_PoliUser": {
   "id": "CollectionResponse_PoliUser",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "PoliUser"
     }
    },
    "nextPageToken": {
     "type": "string"
    }
   }
  },
  "PhoneNumber": {
   "id": "PhoneNumber",
   "type": "object",
   "properties": {
    "number": {
     "type": "string"
    }
   }
  },
  "PoliUser": {
   "id": "PoliUser",
   "type": "object",
   "properties": {
    "age": {
     "type": "integer",
     "format": "int32"
    },
    "email": {
     "type": "string"
    },
    "faculty": {
     "type": "string"
    },
    "favoriteBooksMoviesShowsMusic": {
     "$ref": "Text"
    },
    "fbaccount": {
     "type": "string"
    },
    "height": {
     "type": "integer",
     "format": "int32"
    },
    "imReallyGoodAt": {
     "type": "string"
    },
    "nickname": {
     "type": "string"
    },
    "notifiedAnnouncement": {
     "type": "boolean"
    },
    "notifiedEvent": {
     "type": "boolean"
    },
    "notifiedHitOn": {
     "type": "boolean"
    },
    "notifiedSpotted": {
     "type": "boolean"
    },
    "notifyAnnouncement": {
     "type": "boolean"
    },
    "notifyEvent": {
     "type": "boolean"
    },
    "notifySpotted": {
     "type": "boolean"
    },
    "password": {
     "type": "string"
    },
    "phoneNumber": {
     "$ref": "PhoneNumber"
    },
    "profilePicture1": {
     "type": "string",
     "format": "byte"
    },
    "profilePicture2": {
     "type": "string",
     "format": "byte"
    },
    "selfSummary": {
     "type": "string"
    },
    "sixThingsWithout": {
     "type": "string"
    },
    "tokenFsq": {
     "type": "string"
    },
    "userGoogleAccount": {
     "$ref": "User"
    },
    "userId": {
     "type": "string",
     "format": "int64"
    },
    "whatImDoingWithMyLife": {
     "type": "string"
    }
   }
  },
  "Text": {
   "id": "Text",
   "type": "object",
   "properties": {
    "value": {
     "type": "string"
    }
   }
  },
  "User": {
   "id": "User",
   "type": "object",
   "properties": {
    "authDomain": {
     "type": "string"
    },
    "email": {
     "type": "string"
    },
    "federatedIdentity": {
     "type": "string"
    },
    "nickname": {
     "type": "string"
    },
    "userId": {
     "type": "string"
    }
   }
  }
 },
 "methods": {
  "checkCredentials": {
   "id": "poliuserendpoint.checkCredentials",
   "path": "checkCredentials/{email}/{password}",
   "httpMethod": "GET",
   "parameters": {
    "email": {
     "type": "string",
     "required": true,
     "location": "path"
    },
    "password": {
     "type": "string",
     "required": true,
     "location": "path"
    }
   },
   "parameterOrder": [
    "email",
    "password"
   ],
   "response": {
    "$ref": "PoliUser"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "checkForDuplicateEmail": {
   "id": "poliuserendpoint.checkForDuplicateEmail",
   "path": "checkForDuplicateEmail/{email}",
   "httpMethod": "GET",
   "parameters": {
    "email": {
     "type": "string",
     "required": true,
     "location": "path"
    }
   },
   "parameterOrder": [
    "email"
   ],
   "response": {
    "$ref": "PoliUser"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "checkForDuplicateUsername": {
   "id": "poliuserendpoint.checkForDuplicateUsername",
   "path": "checkForDuplicateUsername/{username}",
   "httpMethod": "GET",
   "parameters": {
    "username": {
     "type": "string",
     "required": true,
     "location": "path"
    }
   },
   "parameterOrder": [
    "username"
   ],
   "response": {
    "$ref": "PoliUser"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "getPoliUser": {
   "id": "poliuserendpoint.getPoliUser",
   "path": "poliuser/{id}",
   "httpMethod": "GET",
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "path"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "response": {
    "$ref": "PoliUser"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "insertPoliUser": {
   "id": "poliuserendpoint.insertPoliUser",
   "path": "poliuser",
   "httpMethod": "POST",
   "request": {
    "$ref": "PoliUser",
    "parameterName": "resource"
   },
   "response": {
    "$ref": "PoliUser"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "listPoliUser": {
   "id": "poliuserendpoint.listPoliUser",
   "path": "poliuser",
   "httpMethod": "GET",
   "parameters": {
    "cursor": {
     "type": "string",
     "location": "query"
    },
    "limit": {
     "type": "integer",
     "format": "int32",
     "location": "query"
    }
   },
   "response": {
    "$ref": "CollectionResponse_PoliUser"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "removePoliUser": {
   "id": "poliuserendpoint.removePoliUser",
   "path": "poliuser/{id}",
   "httpMethod": "DELETE",
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "path"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "updatePoliUser": {
   "id": "poliuserendpoint.updatePoliUser",
   "path": "poliuser",
   "httpMethod": "PUT",
   "request": {
    "$ref": "PoliUser",
    "parameterName": "resource"
   },
   "response": {
    "$ref": "PoliUser"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  }
 }
}
